@page "/Tabel/Create"
@inject NyDatingApp1.Data.datingdatabase Db
@using NyDatingApp1.Models
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Account</h4>

@code{
    private Account account = new Account();
    private Profile profile = new Profile();
}


<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Account" OnValidSubmit="AddAccount">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label>
                <InputText id="firstname" @bind-Value="Account.FirstName" class="form-control" />
                <ValidationMessage For="() => Account.FirstName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label>
                <InputText id="lastname" @bind-Value="Account.LastName" class="form-control" />
                <ValidationMessage For="() => Account.LastName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="Account.Email" class="form-control" />
                <ValidationMessage For="() => Account.Email" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="login" class="form-label">Login:</label>
                <InputText id="login" @bind-Value="Account.Login" class="form-control" />
                <ValidationMessage For="() => Account.Login" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="Account.Password" class="form-control" />
                <ValidationMessage For="() => Account.Password" class="text-danger" />
            </div>
            @* <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="Account.Password" class="form-control" />
                <ValidationMessage For="() => Account.Password" class="text-danger" />
            </div> *@
            
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/Tabel">Back to List</a>
</div>

@code {
    public Account Account { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddAccount()
    {
        try
        {
            Console.WriteLine("AddAccount method called.");
            Db.Accounts.Add(Account);
            await Db.SaveChangesAsync();
            Console.WriteLine("Account saved successfully.");
            NavigationManager.NavigateTo("/Tabel");
        }
        catch (Exception ex)
        {
            // Log the error or display a message to the user
            Console.WriteLine($"Error creating account: {ex.Message}");
        }
    }
}
